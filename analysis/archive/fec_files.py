import os
import pandas
import numpy
import datetime

file = 'filings.csv'
report_types = ['12P','12C','12R','Q2','12S','30R']
committees = ['C00012229','C00607515','C00665711','C00306704','C00640623','C00701672','C00551275','C00726943','C00666040','C00689927','C00696526','C00699975','C00717991','C00737973','C00738625','C00739383','C00741660','C00582866','C00582890','C00657155','C00694091','C00716050','C00722603','C00722694','C00739862','C00651042','C00698084','C00698373','C00708149','C00710582','C00716944','C00717819','C00734087','C00734715','C00736918','C00738328','C00540617','C00649897','C00655134','C00699249','C00721555','C00723197','C00725614','C00735175','C00639146','C00681544','C00499392','C00648956','C00370056','C00708479','C00701102','C00725101','C00650648','C00665638','C00636571','C00700559','C00633982','C00704981','C00634253','C00666859','C00635888','C00721332','C00492454','C00634345','C00691089','C00694844','C00696724','C00696997','C00700708','C00700948','C00714832','C00716720','C00716795','C00719591','C00719823','C00720250','C00730929','C00731877','C00735076','C00735274','C00739334','C00742577','C00743211','C00470757','C00649459','C00670943','C00712034','C00714659','C00723338','C00728238','C00637363','C00717868','C00719146','C00721084','C00733238','C00620443','C00698241','C00701565','C00705244','C00711465','C00723346','C00726000','C00726596','C00735019','C00738070','C00738500','C00740852','C00742825','C00590067','C00667808','C00708263','C00712489','C00718239','C00724062','C00734459','C00742973','C00646455','C00676668','C00700005','C00708222','C00713909','C00718650','C00742247','C00412759','C00713222','C00724088','C00632257','C00675116','C00721290','C00721803','C00743286','C00652065','C00701144','C00716225','C00735985','C00739979','C00656447','C00671859','C00672311','C00711275','C00715474','C00722801','C00725408','C00743617','C00547570','C00689596','C00690974','C00701383','C00712349','C00718866','C00720508','C00721480','C00726075','C00726695','C00728782','C00729608','C00733030','C00736876','C00736983','C00737700','C00738203','C00738716','C00741058','C00741504','C00741843','C00633362','C00672295','C00675777','C00689646','C00694265','C00707612','C00734061','C00735993','C00742544','C00606970','C00647131','C00649376','C00697144','C00698795','C00703504','C00704379','C00704429','C00706564','C00706747','C00708412','C00708750','C00710111','C00711713','C00715763','C00735951','C00546788','C00706648','C00708065','C00708164','C00711085','C00717157','C00726505','C00637074','C00706267','C00708016','C00709618','C00558825','C00701292','C00705178','C00706457','C00711457','C00712315','C00726752','C00545616','C00646844','C00709014','C00709378','C00373563','C00650622','C00693358','C00693663','C00694208','C00694687','C00720607','C00648493','C00712794','C00521948','C00649483','C00652719','C00696872','C00498568','C00716498','C00664797','C00666891','C00709436','C00709881','C00711887','C00714147','C00717330','C00717678','C00721571','C00721985','C00722439','C00725382','C00731232','C00734509','C00737767','C00738195','C00576173','C00676775','C00710780','C00710939','C00711325','C00712133','C00712455','C00713503','C00717280','C00723122','C00735464','C00743153','C00660050','C00711598','C00718346','C00732792','C00670034','C00714089','C00717876','C00721027','C00741132','C00509729','C00709204','C00718106','C00734053','C00467571','C00599514','C00714279','C00314575','C00683193','C00694364','C00703413','C00709279','C00709899','C00710087','C00723411','C00653816','C00713958','C00722108','C00722454','C00729251','C00437889','C00651208','C00655217','C00723924','C00476291','C00656785','C00692830','C00700757','C00701037','C00704270','C00707430','C00709519','C00710814','C00710962','C00711317','C00712265','C00722769','C00723973','C00200584','C00671362','C00701599','C00706770','C00722611','C00727826','C00650150','C00721118','C00722587','C00726687','C00726992','C00729186','C00638650','C00656033','C00691535','C00714006','C00714519','C00725259','C00735910','C00550707','C00649327','C00703116','C00707190','C00722074','C00741025','C00575209','C00719039','C00731281','C00732925','C00733014','C00734863','C00640714','C00713461','C00720730','C00253187','C00610071','C00664862','C00679464','C00699488','C00717959','C00718676','C00738385','C00495846','C00729558','C00356899','C00491357','C00548289','C00700963','C00701748','C00709915','C00709923','C00710509','C00711002','C00711978','C00714295','C00718585','C00738989','C00739417','C00740761','C00741611','C00545772','C00709410','C00729277','C00731885','C00736272','C00662577','C00716159','C00732651','C00504522','C00732800','C00699660','C00731919','C00575167','C00639310','C00698779','C00707497','C00713263','C00740613','C00660464','C00733543','C00734491','C00735001','C00736322','C00590810','C00661868','C00731141','C00732545','C00732891','C00733949','C00736496','C00648220','C00715466','C00727958','C00573949','C00699272','C00705053','C00706275','C00713917','C00729640','C00656686','C00694653','C00703058','C00640003','C00711572','C00655571','C00666149','C00695965','C00717306','C00742114','C00648154','C00655613','C00703025','C00711945','C00713313','C00717322','C00724013','C00731869','C00742155','C00668228','C00694711','C00700898','C00707661','C00709345','C00711077','C00713487','C00714105','C00715284','C00728964','C00731687','C00742288','C00743534','C00552547','C00701334','C00710426','C00711564','C00728832','C00730051','C00691824','C00699413','C00706549','C00727354','C00728220','C00728246','C00729954','C00730028','C00732578','C00732768','C00738112','C00652248','C00694778','C00724682','C00512426','C00565465','C00701433','C00633859','C00713768','C00714907','C00737650','C00632828','C00648725','C00697920','C00712067','C00556365','C00655183','C00702191','C00666453','C00694547','C00706788','C00713859','C00735811','C00301838','C00635342','C00710459','C00711630','C00726059','C00736942','C00743120','C00373001','C00558635','C00713743','C00729137','C00731240','C00662650','C00717405','C00724047','C00726604','C00729673','C00648915','C00691196','C00699629','C00703843','C00704064','C00706895','C00714469','C00721092','C00721357','C00737205','C00742403','C00215905','C00481341','C00582635','C00707505','C00715854','C00718429','C00720185','C00607416','C00710749','C00713008','C00713693','C00723130','C00736330','C00658567','C00664466','C00722892','C00730127','C00509968','C00713511','C00722462','C00730655','C00733618','C00735290','C00735688','C00510164','C00697037','C00710533','C00713453','C00474189','C00704262','C00722314','C00724096','C00730960','C00735381','C00657411','C00701086','C00721894','C00724914','C00735720','C00479758','C00650507','C00707133','C00708875','C00710103','C00711390','C00712471','C00723155','C00734293','C00369033','C00649350','C00712968','C00660795','C00730408','C00640045','C00701003','C00392688','C00662668','C00698134','C00649392','C00723536','C00727990','C00730531','C00662767','C00713297','C00662874','C00716845','C00730150','C00652297','C00705079','C00706614','C00701706','C00702225','C00714865','C00371203','C00706754','C00710475','C00637868','C00715235','C00658633','C00710970','C00713875','C00714311','C00715425','C00719617','C00725853','C00730010','C00741256','C00664375','C00719104','C00725267','C00727743','C00733394','C00637918','C00680488','C00714964','C00718288','C00721308','C00721514','C00649913','C00704643','C00714204','C00715482','C00721126','C00727594','C00729244','C00729335','C00630384','C00638023','C00691386','C00713230','C00721068','C00721142','C00728808','C00472704','C00660472','C00709642','C00652628','C00700161','C00720870','C00737106','C00295931','C00312017','C00637686','C00713982','C00716258','C00724641','C00730580','C00733246','C00736108','C00737924','C00742007']
cover_start = '2020-04-01'
cover_end = '2020-06-30'

# Read in filings.csv downloaded from https://www.fec.gov/data/filings/?data_type=efiling

# print(
# '''
# Reading in filings csv ...
# '''
# )
#     df = pandas.read_csv('../data/source/' + file, dtype={'file_number': object, 'form_type': object, 'committee_id': object, 'committee_name': object, 'receipt_date': object, 'load_timestamp': object, 'coverage_start_date': object, 'coverage_end_date': object, 'beginning_image_number': int, 'ending_image_number': int, 'report_type': object, 'amends_file': object, 'amendment_number': int, 'filed_date': object}) #USE IN DEV IPYNB
df = pandas.read_csv('data/source/' + file, dtype={'file_number': object, 'form_type': object, 'committee_id': object, 'committee_name': object, 'receipt_date': object, 'load_timestamp': object, 'coverage_start_date': object, 'coverage_end_date': object, 'beginning_image_number': int, 'ending_image_number': int, 'report_type': object, 'amends_file': object, 'amendment_number': int, 'filed_date': object}) #USE IN PROD
# df


# Limit to only competitive races listed above in committees variable

# print(
# '''
# Limiting to competitive races specified in committees variable ... 
# '''
# )
# print(committees)
compete = df[df['committee_id'].isin(committees)]
# compete
# compete.to_csv('out.csv', index=False)


# Limit to start and end dates for the quarter

# print(
# '''
# Selecting coverage dates for just this quarter ...
# '''
# )
# print(f'Start: {cover_start}')
# print(f'End: {cover_end}')

dates = compete[(compete['coverage_start_date'] >= cover_start) & (compete['coverage_end_date'] <= cover_end)]
# dates
# dates.to_csv('dates.csv', index=False)

# Print all the report types in the dataframe to make sure you're selecting the proper ones later
# print(
# '''
# Here are all the report types after filtering
# for competitive races and coverage dates:
# '''
# )
# for r in dates['report_type'].unique(): print(r)

# Make a list of the amended files
amendments = dates['amends_file'].tolist()

# Filter out amended files
# print(
# '''
# Filtering out amended filings ...
# '''
# )
amend_filter = dates[~dates['file_number'].isin(amendments)]
# amend_filter
# amend_filter.to_csv('amend_filter.csv', index=False)


# Filter out terminated campaigns

# print(
# '''
# Filtering out terminated campaigns ...
# '''
# )

terminations = amend_filter.loc[amend_filter['report_type'] == 'TER', 'committee_id'].tolist()

no_term = amend_filter[~amend_filter['committee_id'].isin(terminations)]
# no_term
# no_term.to_csv('no_term.csv', index=False)


# Select only certain report_type
# Find a list of all report_type here: https://www.fec.gov/campaign-finance-data/report-type-code-descriptions/

# print(
# '''
# Selecting only specified report types ...
# '''
# )

reports_filter = no_term[no_term['report_type'].isin(report_types)]
# reports_filter.to_csv('reports.csv', index=False)
# reports_filter

files = list(reports_filter['file_number'].astype(int))

# print(
# '''
# Final list of .fec files to be added to SQL database:
# '''
# )

print(files)
